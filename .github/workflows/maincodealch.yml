name: Python Code Alchemist - Analyze, Enhance, Optimize

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch: # Allows manual triggering

permissions:
  contents: write # Required for auto-fixing commits

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  analyze-and-enhance:
    runs-on: ubuntu-latest
    steps:
      - name: ✨ Checkout Code - Retrieve the Scrolls
        uses: actions/checkout@v4.1.1

      - name: 🐍 Set up Python 3.10 - Prepare the Cauldron
        uses: actions/setup-python@v5.0.0
        with:
          python-version: "3.10"

      - name: 📦 Cache pip Dependencies - Preserve the Ingredients
        uses: actions/cache@v3.3.3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: 🧪 Install Base Dependencies - Gather Initial Elixirs
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; else echo "No requirements.txt found, proceeding..."; fi

      - name: 🔧 Install Analysis & Enhancement Tools - Forge the Instruments
        run: |
          pip install pylint==2.17.7 flake8==7.0.0 mypy==1.8.0 black==24.2.0 isort==5.13.2 bandit==1.7.7 pylint-actions==0.3.0

      - name: 🔍 Pylint - Scrutinize for Flaws
        run: |
          pylint -f actions src/ || (echo "Pylint found issues in src/. Check logs above." && exit 1)
        env:
          PYLINTRC: .pylintrc # Uses custom config if present

      - name: 👁️ Flake8 - Inspect for Style Deviations
        run: flake8 src/ || (echo "Flake8 detected style issues in src/." && exit 1)

      - name: 🔮 MyPy - Foresee Type Inconsistencies
        run: mypy src/ || (echo "MyPy found type errors in src/." && exit 1)

      - name: 🛡️ Bandit - Guard Against Security Vulnerabilities
        run: bandit -r src/ || (echo "Bandit detected security issues in src/." && exit 1)

      - name: ✨ Isort - Harmonize Imports Order (Check)
        run: isort --check --diff src/ || echo "Import order issues detected - Run 'isort src/' to fix"
        continue-on-error: true

      - name: ⚫ Black - Enforce Code Style Uniformity (Check)
        run: black --check --diff src/ || echo "Formatting issues detected - Run 'black src/' to fix"
        continue-on-error: true

      - name: ✅ Completion Ritual - Analysis Performed
        if: success()
        run: echo "Code analysis and enhancement checks completed successfully!"

      - name: ❌ Failure Ritual - Analysis Uncovers Issues
        if: failure()
        run: echo "Code analysis failed. Review logs for details."

  fix-and-commit:
    runs-on: ubuntu-latest
    needs: analyze-and-enhance
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && failure())
    steps:
      - name: ✨ Checkout Code - Retrieve the Scrolls
        uses: actions/checkout@v4.1.1

      - name: 🐍 Set up Python 3.10 - Prepare the Cauldron
        uses: actions/setup-python@v5.0.0
        with:
          python-version: "3.10"

      - name: 🔧 Install Fixing Tools - Empower the Alchemists
        run: pip install black==24.2.0 isort==5.13.2

      - name: ✨ Isort - Harmonize Imports Order (Fix)
        run: isort src/

      - name: ⚫ Black - Enforce Code Style Uniformity (Fix)
        run: black src/

      - name: 💾 Commit Fixes - Seal the Transmutation
        uses: stefanzweifel/git-auto-commit-action@v5.0.1
        with:
          commit_message: "Apply Isort and Black formatting fixes"
          branch: ${{ github.head_ref || github.ref_name }}

  notify:
    runs-on: ubuntu-latest
    needs: [analyze-and-enhance, fix-and-commit]
    if: always()
    steps:
      - name: 🔔 Slack Notification - Announce the Outcome
        uses: slackapi/slack-github-action@v1.26.0
        with:
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel-id: "code-alchemy-notifications"
          text: "Code Alchemy for ${{ github.repository }} - ${{ github.ref }} - Status: ${{ job.status }}"
